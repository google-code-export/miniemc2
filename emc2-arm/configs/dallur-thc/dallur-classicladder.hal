# first load realtime portion of classicladder, and create a 1mS thread
loadrt classicladder_rt period=1000000

# hook functions to realtime thread
addf classicladder.0.refresh classicladder.thread 1

# create some I/O signals
newsig A0 bit
newsig I0 bit
newsig I1 bit
newsig I2 bit
newsig I3 bit
newsig I4 bit
newsig I5 bit
newsig I6 bit
newsig I7 bit
newsig I8 bit
newsig I9 bit
newsig I10 bit
newsig I11 bit
newsig Q0 bit
newsig Q1 bit
newsig Q2 bit
newsig Q3 bit
newsig Q4 bit
newsig Q5 bit
newsig Q6 bit
newsig Q7 bit
newsig Q8 bit

# connect I/O signals to classicladder for Estop
# connect I/O signals to classicladder for THC

linksp I0 <= classicladder.0.in-00
linksp I1 <= classicladder.0.in-01
linksp I2 <= classicladder.0.in-02
linksp I3 <= classicladder.0.in-03
linksp I4 <= classicladder.0.in-04
linksp I5 <= classicladder.0.in-05
linksp I6 <= classicladder.0.in-06
linksp I7 <= classicladder.0.in-07
linksp I8 <= classicladder.0.in-08
linksp I9 <= classicladder.0.in-09
linksp I10 <= classicladder.0.in-10
linksp I11 <= classicladder.0.in-11
linksp I12 <= classicladder.0.in-12

linksp Q0 => classicladder.0.out-00
linksp Q1 => classicladder.0.out-01
linksp Q2 => classicladder.0.out-02
linksp Q3 <= classicladder.0.out-03
linksp Q4 <= classicladder.0.out-04
linksp Q5 <= classicladder.0.out-05
linksp Q6 <= classicladder.0.out-06
linksp Q7 <= classicladder.0.out-07
linksp Q8 <= classicladder.0.out-08


# set the input signals
sets I0 0
sets I1 0
sets I2 0

# set the intra_communication signals
sets A0 0
